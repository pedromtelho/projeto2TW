{"ast":null,"code":"var _jsxFileName = \"/home/pedromtelho/Documents/QuartoSemestre/1help/projeto2/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport LoadingScreen from 'react-loading-screen';\nimport 'bootstrap/dist/css/bootstrap.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectRegion = async e => {\n      var teams = [];\n      let idx = e.target.selectedIndex;\n      const index = this.state.info[idx].id;\n      await axios.get(\"http://api.football-data.org/v2/competitions/\".concat(index), {\n        headers: {\n          'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        this.setState({\n          champs: res.data,\n          champsCurrent: res.data.currentSeason,\n          champsSeason: res.data.seasons,\n          error: null\n        });\n        axios.get(\"http://api.football-data.org/v2/competitions/\".concat(index, \"/teams\"), {\n          headers: {\n            'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n            'content-type': 'application/json'\n          }\n        }).then(res => {\n          console.log(res.data.teams);\n          let teamsList = res.data.teams.map((item, i) => {\n            teams.push(item);\n          });\n          this.setState({\n            teams: teams\n          });\n        });\n      }).catch(err => {\n        console.log('error');\n        this.setState({\n          error: \"true\"\n        });\n      });\n    };\n\n    this.state = {\n      info: '',\n      champs: '',\n      champsCurrent: '',\n      champsSeason: '',\n      teams: '',\n      error: null,\n      loading: true\n    };\n    this.selectRegion = this.selectRegion.bind(this);\n  }\n\n  async componentWillMount() {\n    var listSucess = [];\n    var champs = [];\n    var champsCurrent = [];\n    var champsSeason = [];\n    await axios.get(\"http://api.football-data.org/v2/competitions/\", {\n      headers: {\n        'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n        'content-type': 'application/json'\n      }\n    }).then(res => {\n      var listNames = [];\n      let infoList = res.data.competitions.map(async (item, i) => {\n        await axios.get(\"http://api.football-data.org/v2/competitions/\".concat(item.area.id), {\n          headers: {\n            'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n            'content-type': 'application/json'\n          }\n        }).then(res => {\n          listSucess.push(res.data);\n          champs.push(res.data);\n          champsCurrent.push(res.data.currentSeason);\n          champsSeason.push(res.data.seasons);\n          console.log(listSucess);\n        }).catch(err => {\n          this.setState({\n            error: \"true\"\n          });\n        });\n        return this.setState({\n          info: listSucess,\n          champs: champs,\n          champsCurrent: champsCurrent,\n          champsSeason: champsSeason,\n          error: null,\n          loading: false\n        });\n      }, this);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          info = _this$state.info,\n          champs = _this$state.champs,\n          champsCurrent = _this$state.champsCurrent,\n          champsSeason = _this$state.champsSeason,\n          error = _this$state.error,\n          teams = _this$state.teams,\n          loading = _this$state.loading;\n    let seasonList = error === null && champsSeason ? champsSeason.map((item, i) => React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, 'Id season: ', item.id), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, 'Start date: ', item.startDate), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, 'End date: ', item.endDate))) : React.createElement(\"div\", {\n      key: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Dados indisponÃ­veis\"));\n    let infoList = info.length > 0 && info.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: info[i].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, item.area.name);\n    }, this);\n    let infoTeams = teams.length > 0 && teams.map((item, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, item.name)));\n    }, this);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(LoadingScreen, {\n      loading: loading,\n      bgColor: \"#f1f1f1\",\n      spinnerColor: \"#9ee5f8\",\n      textColor: \"#676767\" // logoSrc='/logo.png'\n      ,\n      text: \"Loading...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"item1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Select your region:\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"forms\",\n      onChange: this.selectRegion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, infoList)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Current Season\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, champs.name, ' - ', champs.code, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, 'Start date: ', champsCurrent.startDate), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, 'End date: ', champsCurrent.endDate)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Previous Seasons\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, seasonList), \"Teams in competition:\", infoTeams)));\n  }\n\n}","map":{"version":3,"sources":["/home/pedromtelho/Documents/QuartoSemestre/1help/projeto2/src/App.js"],"names":["React","axios","LoadingScreen","App","Component","constructor","props","selectRegion","e","teams","idx","target","selectedIndex","index","state","info","id","get","headers","then","res","setState","champs","data","champsCurrent","currentSeason","champsSeason","seasons","error","console","log","teamsList","map","item","i","push","catch","err","loading","bind","componentWillMount","listSucess","listNames","infoList","competitions","area","render","seasonList","startDate","endDate","length","name","infoTeams","code"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport LoadingScreen from 'react-loading-screen';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      info: '',\n      champs: '',\n      champsCurrent: '',\n      champsSeason: '',\n      teams: '',\n      error: null,\n      loading: true\n    };\n    this.selectRegion = this.selectRegion.bind(this);\n  }\n\n    selectRegion = async (e) => {\n      var teams = [];\n      let idx = e.target.selectedIndex;\n      const index = this.state.info[idx].id;\n      await axios.get(`http://api.football-data.org/v2/competitions/${index}`,\n          { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type' : 'application/json'}}\n        ).then(res => {\n            this.setState({champs: res.data,\n            champsCurrent: res.data.currentSeason,\n            champsSeason: res.data.seasons,\n            error:null})\n            axios.get(`http://api.football-data.org/v2/competitions/${index}/teams`,\n            { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n            'content-type' : 'application/json'}}\n          ).then(res => {\n            console.log(res.data.teams)\n            let teamsList = res.data.teams.map((item, i) => {\n              teams.push(item)\n            })\n            this.setState({teams: teams})\n          })\n        }).catch(err => {\n          console.log('error')\n          this.setState({\n            error:\"true\"\n          })\n        })\n    };\n    \n    async componentWillMount() {\n      var listSucess = [];\n      var champs = [];\n      var champsCurrent = [];\n      var champsSeason = [];\n      await axios.get(\"http://api.football-data.org/v2/competitions/\",\n          { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type' : 'application/json'}}\n        ).then(res => {\n          var listNames = [];\n          let infoList = res.data.competitions.map(async (item, i) => {\n          await axios.get(`http://api.football-data.org/v2/competitions/${item.area.id}`,\n          { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type' : 'application/json'}}\n          ).then(res => {\n              listSucess.push(res.data);\n              champs.push(res.data);\n              champsCurrent.push(res.data.currentSeason);\n              champsSeason.push(res.data.seasons);\n              console.log(listSucess)\n          }).catch(err => {\n          this.setState({\n            error:\"true\"\n          })\n        })\n            return(\n              this.setState({info: listSucess,\n                champs: champs,\n                champsCurrent: champsCurrent,\n                champsSeason: champsSeason,\n                error:null,\n              loading: false})\n            )\n          }, this);\n        })\n    }\n\n  render() {\n    const { info, champs, champsCurrent, champsSeason, error, teams, loading } = this.state;\n    let seasonList = ((error===null) &&  champsSeason) ? champsSeason.map((item, i) => (\n          <div key={i}>\n            <p key={i}>{'Id season: '}{ item.id }</p>\n            <li>{'Start date: '}{ item.startDate }</li>\n            <li>{'End date: '}{ item.endDate }</li> \n          </div>\n        \n      )) : (<div key={0}>\n        <p>{\"Dados indisponÃ­veis\"}</p>\n      </div>)\n\n    let infoList = info.length > 0 && info.map((item, i) => {\n      return(\n        <option key={i} value={info[i].id}>{item.area.name}</option>\n      )\n    }, this);\n\n    let infoTeams = teams.length > 0 && teams.map((item, i) => {\n      return(\n        <div key={i}>\n          <ul>\n            <li>\n              {item.name}\n            </li>\n          </ul>\n        </div>\n      )\n    }, this);\n\n    return(\n      <div>\n          <LoadingScreen\n            loading={loading}\n            bgColor='#f1f1f1'\n            spinnerColor='#9ee5f8'\n            textColor='#676767'\n            // logoSrc='/logo.png'\n            text='Loading...'\n          >\n      <div>\n      <div className=\"grid-container\">\n      <div className=\"item1\">Select your region:</div>\n      </div>\n      <div className=\"row\">\n        <select className=\"forms\" onChange={this.selectRegion}>\n          { infoList }\n        </select>\n      </div>\n        <p>Current Season</p>\n        <ul>\n          { champs.name }{ ' - ' }{ champs.code }\n          <li>{'Start date: '}{ champsCurrent.startDate }</li>\n          <li>{'End date: '}{ champsCurrent.endDate }</li>\n        </ul>\n        <p>Previous Seasons</p>\n        <ul>\n          { seasonList }\n        </ul>\n        Teams in competition:\n          {infoTeams}\n      </div>\n          </LoadingScreen>       \n\n      </div>\n\n        \n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}