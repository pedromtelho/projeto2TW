{"ast":null,"code":"var _jsxFileName = \"/home/pedromtelho/Documents/QuartoSemestre/1help/projeto2/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectRegion = async e => {\n      let idx = e.target.selectedIndex;\n      const index = this.state.info[idx].id;\n      await axios.get(\"http://api.football-data.org/v2/competitions/\".concat(index), {\n        headers: {\n          'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        // console.log(res);\n        // if(res){\n        this.setState({\n          champs: res.data,\n          champsCurrent: res.data.currentSeason,\n          champsSeason: res.data.seasons,\n          error: null\n        }); // }\n        // else{\n        //   alert(\"Dados indisponíveis\");\n        //   console.log(\"aqui\")\n        // }\n        //PRECISO ARRUMAR O ESQUEMA DO ERRO\n      }).catch(err => {\n        this.setState({\n          error: true\n        });\n      });\n    };\n\n    this.state = {\n      info: '',\n      champs: '',\n      champsCurrent: '',\n      champsSeason: '',\n      error: null\n    };\n    this.selectRegion = this.selectRegion.bind(this);\n  } // postLogin = async () => {\n  //   const request = {\n  //     method: 'POST',\n  //     url: 'aaa',\n  //     responseType: 'json'\n  //   }\n  // }\n  //request.headers = {Authorization: token}\n  // request.data = this.state\n  // const response = await axios (request)\n  // return response \n  // console.log('telho')\n\n\n  async componentWillMount() {\n    await axios.get(\"http://api.football-data.org/v2/competitions/\", {\n      headers: {\n        'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n        'content-type': 'application/json'\n      }\n    }).then(res => {\n      // console.log(res.data.competitions);\n      this.setState({\n        info: res.data.competitions\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          info = _this$state.info,\n          champs = _this$state.champs,\n          champsCurrent = _this$state.champsCurrent,\n          champsSeason = _this$state.champsSeason,\n          error = _this$state.error;\n\n    let seasonList = () => {\n      if (error === null) {\n        return champsSeason.map((item, i) => React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, 'Id season: ', item.id), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, 'Start date: ', item.startDate), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, 'End date: ', item.endDate)));\n      } else {\n        return React.createElement(\"div\", {\n          key: null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, 'NÃO TEM NADA'));\n      }\n    }; // let seasonList = (champs!==null) && champsSeason.map((item, i) => {\n    //   if(i !== 0 ){\n    //     console.log(item)\n    //     return(\n    //       <div key={i}>\n    //         <p key={i}>{'Id season: '}{ item.id }</p>\n    //         <li>{'Start date: '}{ item.startDate }</li>\n    //         <li>{'End date: '}{ item.endDate }</li>\n    //       </div>\n    //     )\n    //   }\n    //   else{\n    //     return(\n    //       <div key={i}>\n    //       <p>{'NÃO TEM NADA'}</p>\n    //       </div>\n    //     )\n    //   }\n    //   // if(error !== ''){\n    //   //   return(\n    //   //     <div key={i}>\n    //   //       <p>{\"Dados indisponíveis\"}</p>\n    //   //     </div>\n    //   //   )\n    //   // }\n    // }, this);\n\n\n    let infoList = info.length > 0 && info.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: info[i].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, item.area.name);\n    }, this);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Select your region:\"), React.createElement(\"select\", {\n      onChange: this.selectRegion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, infoList), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Current Season\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, champs.name, ' - ', champs.code, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, 'Start date: ', champsCurrent.startDate), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, 'End date: ', champsCurrent.endDate)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Previous Seasons\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, seasonList));\n  }\n\n}","map":{"version":3,"sources":["/home/pedromtelho/Documents/QuartoSemestre/1help/projeto2/src/App.js"],"names":["React","axios","App","Component","constructor","props","selectRegion","e","idx","target","selectedIndex","index","state","info","id","get","headers","then","res","setState","champs","data","champsCurrent","currentSeason","champsSeason","seasons","error","catch","err","bind","componentWillMount","competitions","render","seasonList","map","item","i","startDate","endDate","infoList","length","area","name","code"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      info: '',\n      champs: '',\n      champsCurrent: '',\n      champsSeason: '',\n      error: null\n    };\n    this.selectRegion = this.selectRegion.bind(this);\n  }\n  // postLogin = async () => {\n  //   const request = {\n  //     method: 'POST',\n  //     url: 'aaa',\n  //     responseType: 'json'\n  //   }\n  // }\n    //request.headers = {Authorization: token}\n    // request.data = this.state\n    // const response = await axios (request)\n    // return response \n    // console.log('telho')\n\n    selectRegion = async (e) => {\n      let idx = e.target.selectedIndex;\n      const index = this.state.info[idx].id;\n      await axios.get(`http://api.football-data.org/v2/competitions/${index}`,\n          { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type' : 'application/json'}}\n        ).then(res => {\n          // console.log(res);\n          // if(res){\n            this.setState({champs: res.data,\n            champsCurrent: res.data.currentSeason,\n            champsSeason: res.data.seasons,\n          error:null})\n          // }\n          // else{\n          //   alert(\"Dados indisponíveis\");\n          //   console.log(\"aqui\")\n          // }\n          //PRECISO ARRUMAR O ESQUEMA DO ERRO\n        }).catch(err => {\n          this.setState({\n            error:true\n          })\n        })\n    };\n\n    async componentWillMount() {\n      await axios.get(\"http://api.football-data.org/v2/competitions/\",\n          { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type' : 'application/json'}}\n        ).then(res => {\n          // console.log(res.data.competitions);\n          this.setState({info: res.data.competitions}); \n        })\n    }\n\n  render() {\n    const { info, champs, champsCurrent, champsSeason, error } = this.state;\n    let seasonList=()=>{\n      if(error === null){\n        return (\n          champsSeason.map((item,i)=>(<div key={i}>\n            <p key={i}>{'Id season: '}{ item.id }</p>\n            <li>{'Start date: '}{ item.startDate }</li>\n            <li>{'End date: '}{ item.endDate }</li>\n          </div>))\n        )\n      }else{\n        return(\n          <div key={null}>\n          <p>{'NÃO TEM NADA'}</p>\n          </div>\n        )\n      }\n\n    }\n\n    // let seasonList = (champs!==null) && champsSeason.map((item, i) => {\n    //   if(i !== 0 ){\n    //     console.log(item)\n    //     return(\n    //       <div key={i}>\n    //         <p key={i}>{'Id season: '}{ item.id }</p>\n    //         <li>{'Start date: '}{ item.startDate }</li>\n    //         <li>{'End date: '}{ item.endDate }</li>\n    //       </div>\n    //     )\n    //   }\n    //   else{\n    //     return(\n    //       <div key={i}>\n    //       <p>{'NÃO TEM NADA'}</p>\n    //       </div>\n    //     )\n    //   }\n    //   // if(error !== ''){\n    //   //   return(\n    //   //     <div key={i}>\n    //   //       <p>{\"Dados indisponíveis\"}</p>\n    //   //     </div>\n    //   //   )\n    //   // }\n    // }, this);\n    \n\n    let infoList = info.length > 0 && info.map((item, i) => {\n      return(\n        <option key={i} value={info[i].id}>{item.area.name}</option>\n      )\n    }, this);\n\n    return(\n      <div>\n        <p>Select your region:</p>\n        <select onChange={this.selectRegion}>\n          { infoList }\n        </select>\n        <p>Current Season</p>\n        <ul>\n          { champs.name }{ ' - ' }{ champs.code }\n          <li>{'Start date: '}{ champsCurrent.startDate }</li>\n          <li>{'End date: '}{ champsCurrent.endDate }</li>\n        </ul>\n        <p>Previous Seasons</p>\n        <ul>\n          { seasonList }\n        </ul> \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}