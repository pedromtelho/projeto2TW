{"ast":null,"code":"var _jsxFileName = \"/home/pedromtelho/Documents/QuartoSemestre/1help/projeto2/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectRegion = async e => {\n      let idx = e.target.selectedIndex;\n      const index = this.state.info[idx].id;\n      await axios.get(\"http://api.football-data.org/v2/competitions/\".concat(index), {\n        headers: {\n          'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        this.setState({\n          champs: res.data,\n          champsCurrent: res.data.currentSeason,\n          champsSeason: res.data.seasons,\n          error: null\n        });\n      }).catch(err => {\n        console.log('error');\n        this.setState({\n          error: \"true\"\n        });\n      });\n    };\n\n    this.state = {\n      info: '',\n      champs: '',\n      champsCurrent: '',\n      champsSeason: '',\n      error: null\n    };\n    this.selectRegion = this.selectRegion.bind(this);\n  }\n\n  async componentWillMount() {\n    var listSucess = [];\n    var champs = [];\n    var champsCurrent = [];\n    var champsSeason = [];\n    await axios.get(\"http://api.football-data.org/v2/competitions/\", {\n      headers: {\n        'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n        'content-type': 'application/json'\n      }\n    }).then(res => {\n      var listNames = [];\n      let infoList = res.data.competitions.map((item, i) => {\n        axios.get(\"http://api.football-data.org/v2/competitions/\".concat(item.area.id), {\n          headers: {\n            'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n            'content-type': 'application/json'\n          }\n        }).then(res => {\n          listSucess.push(res.data);\n          champs.push(res.data);\n          champsCurrent.push(res.data.currentSeason);\n          champsSeason.push(res.data.seasons);\n          console.log(listSucess);\n        }).catch(err => {\n          // console.log('error')\n          this.setState({\n            error: \"true\"\n          });\n        });\n        return this.setState({\n          info: listSucess,\n          champs: champs,\n          champsCurrent: champsCurrent,\n          champsSeason: champsSeason,\n          error: null\n        }) // console.log(listSucess)\n        ;\n      }, this); // this.setState({info: res.data.competitions,\n      // names: listNames}); \n    }); // console.log(this.state.names[0].value)\n    // await axios.get(`http://api.football-data.org/v2/competitions/${index}`,\n    //   { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n    //   'content-type' : 'application/json'}}\n    // ).then(res => {\n  }\n\n  render() {\n    const _this$state = this.state,\n          info = _this$state.info,\n          champs = _this$state.champs,\n          champsCurrent = _this$state.champsCurrent,\n          champsSeason = _this$state.champsSeason,\n          error = _this$state.error;\n\n    let currentSeasonLog = () => {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, champs.name, ' - ', champs.code, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, 'Start date: ', champsCurrent.startDate), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, 'End date: ', champsCurrent.endDate));\n    };\n\n    let seasonList = error === null && champsSeason ? champsSeason.map((item, i) => React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, 'Id season: ', item.id), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, 'Start date: ', item.startDate), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, 'End date: ', item.endDate))) : React.createElement(\"div\", {\n      key: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Dados indisponÃ­veis\"));\n    let infoList = info.length > 0 && info.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: info[i].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, item.area.name);\n    }, this);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Select your region:\"), React.createElement(\"select\", {\n      onChange: this.selectRegion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, infoList), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Current Season\"), this.currentSeasonLog, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Previous Seasons\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, seasonList));\n  }\n\n}","map":{"version":3,"sources":["/home/pedromtelho/Documents/QuartoSemestre/1help/projeto2/src/App.js"],"names":["React","axios","App","Component","constructor","props","selectRegion","e","idx","target","selectedIndex","index","state","info","id","get","headers","then","res","setState","champs","data","champsCurrent","currentSeason","champsSeason","seasons","error","catch","err","console","log","bind","componentWillMount","listSucess","listNames","infoList","competitions","map","item","i","area","push","render","currentSeasonLog","name","code","startDate","endDate","seasonList","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      info: '',\n      champs: '',\n      champsCurrent: '',\n      champsSeason: '',\n      error: null\n    };\n    this.selectRegion = this.selectRegion.bind(this);\n  }\n\n    selectRegion = async (e) => {\n      let idx = e.target.selectedIndex;\n      const index = this.state.info[idx].id;\n      await axios.get(`http://api.football-data.org/v2/competitions/${index}`,\n          { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type' : 'application/json'}}\n        ).then(res => {\n            this.setState({champs: res.data,\n            champsCurrent: res.data.currentSeason,\n            champsSeason: res.data.seasons,\n            error:null})\n        }).catch(err => {\n          console.log('error')\n          this.setState({\n            error:\"true\"\n          })\n        })\n    };\n    \n    async componentWillMount() {\n      var listSucess = [];\n      var champs = [];\n      var champsCurrent = [];\n      var champsSeason = [];\n      await axios.get(\"http://api.football-data.org/v2/competitions/\",\n          { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type' : 'application/json'}}\n        ).then(res => {\n          var listNames = [];\n          let infoList = res.data.competitions.map((item, i) => {\n            axios.get(`http://api.football-data.org/v2/competitions/${item.area.id}`,\n          { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n          'content-type' : 'application/json'}}\n          ).then(res => {\n              listSucess.push(res.data);\n              champs.push(res.data);\n              champsCurrent.push(res.data.currentSeason);\n              champsSeason.push(res.data.seasons);\n              console.log(listSucess)\n          }).catch(err => {\n          // console.log('error')\n          this.setState({\n            error:\"true\"\n          })\n        })\n            return(\n              this.setState({info: listSucess,\n                champs: champs,\n                champsCurrent: champsCurrent,\n                champsSeason: champsSeason,\n                error:null})\n                // console.log(listSucess)\n            )\n          }, this);\n          \n          // this.setState({info: res.data.competitions,\n          // names: listNames}); \n        })\n        // console.log(this.state.names[0].value)\n\n        // await axios.get(`http://api.football-data.org/v2/competitions/${index}`,\n        //   { headers: {'X-Auth-Token': 'd5627ca1908f47b19b6e11d039d113da',\n        //   'content-type' : 'application/json'}}\n        // ).then(res => {\n    }\n\n  render() {\n    const { info, champs, champsCurrent, champsSeason, error } = this.state;\n    let currentSeasonLog = () => {\n      return(\n        <ul>\n          { champs.name }{ ' - ' }{ champs.code }\n          <li>{'Start date: '}{ champsCurrent.startDate }</li>\n          <li>{'End date: '}{ champsCurrent.endDate }</li>\n        </ul>\n      )\n    }\n    let seasonList = ((error===null) &&  champsSeason) ? champsSeason.map((item, i) => (\n          <div key={i}>\n            <p key={i}>{'Id season: '}{ item.id }</p>\n            <li>{'Start date: '}{ item.startDate }</li>\n            <li>{'End date: '}{ item.endDate }</li> \n          </div>\n        \n      )) : (<div key={0}>\n        <p>{\"Dados indisponÃ­veis\"}</p>\n      </div>)\n    \n\n    let infoList = info.length > 0 && info.map((item, i) => {\n      return(\n        <option key={i} value={info[i].id}>{item.area.name}</option>\n      )\n    }, this);\n\n\n    return(\n      <div>\n        <p>Select your region:</p>\n        <select onChange={this.selectRegion}>\n          { infoList }\n        </select>\n        <p>Current Season</p>\n        {this.currentSeasonLog}\n        {/* <ul>\n          { champs.name }{ ' - ' }{ champs.code }\n          <li>{'Start date: '}{ champsCurrent.startDate }</li>\n          <li>{'End date: '}{ champsCurrent.endDate }</li>\n        </ul> */}\n        <p>Previous Seasons</p>\n        <ul>\n          { seasonList }\n        </ul> \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}